#!/usr/bin/env node
let cmd = require('./build/lib/cmd')
let fss = require('fs')
let fs  = require('fs').promises

let args = process.argv.slice(2)

let no_nvm_check = '--no-nvm-check'
let nvm_error = `
You are not using Node Version Manager. Building the project will probably fail.
Follow the link to learn how to use NVM: https://github.com/nvm-sh/nvm
Please use '${no_nvm_check}' to skip this check (not recommended).
`

async function init () {
    let initialized = fss.existsSync('.initialized')
    if (!initialized) {
        cmd.section('Validation')
        if (!args.includes(no_nvm_check)) {
            if (process.env.NVM_DIR == undefined) {
                throw nvm_error
            }
            // TODO[WD]: Why its not working?
            // await cmd.check_version('nvm','0.35.2')
        }
        await cmd.check_version('npm','6.14.1')
        await cmd.check_version('node','v12.16.1')
        await cmd.check_version('rustc','1.40.0-nightly',{preprocess:(v)=>v.substring(6,20)})

        cmd.section('Initialization')
        console.log('Installing build script dependencies.')
        await cmd.with_cwd('build', async () => {
            await cmd.run('npm',['install'])
        })

        if(args[0] == 'clean') {
            console.log('Skipping full initialization.')
        } else {
            console.log('Installing application dependencies')
            await cmd.with_cwd('app', async () => {
                await cmd.run('npm',['run','install'])
            })
            await fs.open('.initialized','w')
        }
    }
}

async function main() {
    await init()
    cmd.run('node',['./build/run'].concat(args))
}

main()
